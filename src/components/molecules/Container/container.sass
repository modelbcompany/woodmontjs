// -----------------------------------------------------------------------------
// Container variables, functions, mixins, placeholders, and styles
// @group Container
// -----------------------------------------------------------------------------

// Variables

// Functions

// Mixins

/// Content container styles
/// @require {mixin} height
/// @require {mixin} no-margin
/// @require {mixin} sticky
/// @require {mixin} width
/// @param {String} $context [null] - Selector context
=is-content-container($context: null)
  @if $context == null
    // @todo
  @else if $context == adm-dropdown
    +height(auto, unset, none)

    +no-margin

    +width(100%)

  @content

/// Default page layout styles
/// @require {mixin} constrain
/// @require {mixin} is-stretched
/// @param {String} $context [null] - Selector context
=is-layout-container($context: null)
  @if $context == null
    +is-stretched

  @content

// Placeholders

/// Container component styles
/// @require <Container>Container element</Container>
/// @require {function} map2-get
/// @require {mixin} constrain
/// @require {mixin} is-centered
/// @require {mixin} no-margin
/// @require {variable} $breakpoint-1024
/// @require {variable} $breakpoint-414
/// @require {variable} $devices
%Container
  +constrain(map2-get($devices, 'desktop', 'max-width'))

  +is-centered

  +respond-to($breakpoint-1024)
    +constrain(map2-get($devices, 'tablet', 'max-width'))


  +respond-to($breakpoint-414)
    +constrain(map2-get($devices, 'mobile', 'max-width'))


  &.is-full-width
    +no-margin

// Styles

// Container
.adm-container
  @extend %Container

.dropdown-content
  +is-content-container(adm-dropdown)

.layout-container
  +is-layout-container

.floorplan-search-form-filters .fieldset-container
  +display-flex

  +flex-spread(flex-start)

.floorplans-grid-container
  +display-flex

  +flex-align(flex-start)

  flex-wrap: wrap

// Responsive Styles

// Desktop

// Tablet

// Mobile
